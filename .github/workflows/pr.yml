name: PR Build

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]

permissions:
  contents: read
  issues: read

jobs:
  validate-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Check for required labels
        id: check_labels
        run: |
          # Get all labels on the PR from the event payload
          LABELS=$(echo '${{ toJSON(github.event.pull_request.labels) }}' | jq -r '.[].name' | tr '\n' ' ')

          # Define required labels
          REQUIRED_LABELS=("version:major" "version:minor" "version:patch")

          # Count how many version labels are present
          VERSION_LABEL_COUNT=0
          FOUND_LABEL=""
          for label in "${REQUIRED_LABELS[@]}"; do
            if [[ "$LABELS" == *"$label"* ]]; then
              VERSION_LABEL_COUNT=$((VERSION_LABEL_COUNT + 1))
              FOUND_LABEL="$label"
            fi
          done

          if [[ "$VERSION_LABEL_COUNT" -eq 0 ]]; then
            echo "❌ ERROR: Pull request must have exactly one of the following labels:"
            echo "   - version:major"
            echo "   - version:minor" 
            echo "   - version:patch"
            echo ""
            echo "Current labels: $LABELS"
            echo "No version label found."
            exit 1
          elif [[ "$VERSION_LABEL_COUNT" -gt 1 ]]; then
            echo "❌ ERROR: Pull request must have exactly one version label, but found $VERSION_LABEL_COUNT:"
            echo "   - version:major"
            echo "   - version:minor" 
            echo "   - version:patch"
            echo ""
            echo "Current labels: $LABELS"
            echo "Please remove extra version labels and keep only one."
            exit 1
          else
            echo "✅ Exactly one version label found: $FOUND_LABEL"
            echo "labels=$LABELS" >> $GITHUB_OUTPUT
            echo "version_label=$FOUND_LABEL" >> $GITHUB_OUTPUT
          fi

  build-test:
    runs-on: ubuntu-latest
    needs: validate-labels
    steps:
      - uses: actions/checkout@v4

      - name: Cache npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Run tests
        run: npm test 